extends layout.dt

block content
	- if (fresh)
		h1 Guestbook

	form.guestbook-submit(method="POST")
		- static if (is(typeof(error)))
			p.error= error
		input(type="hidden", name="token", value=token)
		table
			tr
				th
					label(for="author") Author
				td
					input#author(type="text", placeholder="My Name", name="name", minlength=2, maxlength=16, required, value=name)
			tr
				th
					label(for="message") Message
				td
					input#message(type="text", placeholder="I gave this 5 stars on youtube!", name="message", title="Think of more content and try to write down all your thoughts to avoid spam.", minlength=12, maxlength=120, required, value=message)
			tr
				td
				td
					input(type="submit", value="Post")

	article.guestbook
		- import std.datetime.date;
		- int n;
		- size_t maxEntries = fresh ? 14 : 20;
		.comments
			- import std.regex : ctRegex, matchAll;
			- static immutable urlRegex = ctRegex!`(ht|f)tp(s?)\:\/\/[0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])*(:(0-9)*)*(\/?)([a-zA-Z0-9\-.?,'\/\\+&%$#_]*)?`;
			- Date lastDate;
			- foreach (entry; book)
				- if (++n > maxEntries) break;
				- Date d = cast(Date)entry.timestamp;
				- scope(exit) lastDate = d;
				.comment
					span.date(class=(lastDate == d ? "same-date" : "new-date"))= d
					span.sender= entry.sender
					- size_t start = 0;
					blockquote
						- foreach (match; matchAll(entry.message, urlRegex))
							|= match.pre[start .. $]
							a(href=match.hit, target="_blank")= match.hit
							- start = match.pre.length + match.hit.length;
						|= entry.message[start .. $]
